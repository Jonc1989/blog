{"version":3,"sources":["app.js","home/home.js","users/user.js","home/components/info.js","home/components/online.js","home/components/search.js","home/controllers/OnlineController.js","home/controllers/SearchController.js","users/components/invitations.js","users/controllers/InvitationController.js","users/controllers/UserController.js","users/services/UserService.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["/**\r\n * Created by Janis on 06.08.2016..\r\n */\r\nvar app = angular.module( 'app', [\r\n    'ngComponentRouter',\r\n    'home',\r\n    'users'\r\n\r\n] );\r\n","var home = angular.module('home', [\r\n\r\n]);\r\n","var user = angular.module('users', [\r\n    \r\n]);\r\n","/**\r\n * Created by Janis on 06.08.2016..\r\n */\r\napp.component( 'info', {\r\n    templateUrl: '/api/view/modules.home.api.info',\r\n    controller: 'UserController',\r\n    bindings: {\r\n        id: '<'\r\n    }\r\n})","\r\napp.component( 'online', {\r\n    templateUrl: '/api/view/modules.home.api.online',\r\n    controller: 'OnlineController'\r\n})","app.component( 'search', {\r\n    templateUrl: '/api/view/modules.home.api.search',\r\n    controller: 'SearchController'\r\n})","home.controller( 'OnlineController', [ 'UserService', '$scope', function ( UserService, $scope ) {\r\n    $scope.users = [];\r\n    \r\n    this.$onInit = function () {\r\n        var details = ['name', 'surname', 'photo'];\r\n        UserService.onlineUsers( details ).then( function( response )\r\n        {\r\n            $scope.users = response;\r\n        });\r\n    };\r\n\r\n}]);","user.controller( 'SearchController', [ 'UserService', '$scope', function ( UserService, $scope ) {\r\n\r\n    $scope.searchKey = '';\r\n    $scope.searchResults = [];\r\n    \r\n    $scope.search = function()\r\n    {\r\n        if( $scope.searchKey.length > 2)\r\n        {\r\n            UserService.search($scope.searchKey).then( function( response )\r\n            {\r\n                console.log(response);\r\n                $scope.searchResults = response;\r\n            });\r\n        }else if( $scope.searchKey.length < 1 ){\r\n            $scope.searchResults = [];\r\n        }\r\n    };\r\n    \r\n    $scope.showUser = function(id)\r\n    {\r\n        window.location.href = '/user/' + id;\r\n    };\r\n\r\n    $scope.hideSearchResults = function () {\r\n        setTimeout( function () {\r\n            $('#search-results').hide();\r\n        }, 100 );\r\n    }\r\n\r\n    $scope.showSearchResults = function () {\r\n        $('#search-results').show();\r\n    }\r\n}]);","user.component( 'invitation', {\r\n    templateUrl: '/api/view/modules.users.api.invitation',\r\n    controller: 'InvitationController',\r\n    bindings: {\r\n        friendid: '<',\r\n        myid: '<'\r\n    }\r\n})","user.controller( 'InvitationController', [ 'UserService', '$scope', function ( UserService, $scope ) {\r\n\r\n    $scope.myId = null;\r\n    $scope.friendId = null;\r\n    $scope.friendStatus = null;\r\n\r\n\r\n    this.$onInit = function () {\r\n        $scope.friendId = this.friendid;\r\n        $scope.myId = this.myid;\r\n        UserService.getStatus($scope.friendId).then( function ( response ) {\r\n            console.log(response);\r\n\r\n            if(response.length == 0) {\r\n                $scope.friendStatus = 0; //nav draugi\r\n            }else if( response[0].user_id == $scope.myId ){\r\n                if( response[0].friendship == 0 ){\r\n                    $scope.friendStatus = 1; //uzaicinājums nosūtīts\r\n                }else{\r\n                    $scope.friendStatus = 2; //uzaicinājums apstiprināts\r\n                }\r\n            }else if( response[0].friend_id == $scope.friendId ){\r\n                if( response[0].friendship == 0 ){\r\n                    $scope.friendStatus = 3; //uzaicinājums saņemts\r\n                }else{\r\n                    $scope.friendStatus = 4; //uzaicinājumu apstiprināju\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    $scope.invite = function () {\r\n        UserService.invite( $scope.friendId ).then( function( response )  {        });\r\n    };\r\n\r\n\r\n\r\n}]);","user.controller( 'UserController', [ 'UserService', '$scope', function ( UserService, $scope ) {\r\n    $scope.user = null;\r\n\r\n\r\n    this.$onInit = function () {\r\n        var details = [ 'name', 'surname', 'photo' ];\r\n        UserService.getUser( this.id, details ).then( function( response )\r\n        {\r\n            $scope.user = response;\r\n        });\r\n    };\r\n    \r\n}]);","user.service( 'UserService', ['$http', '$q', function( $http, $q )\r\n    {\r\n\r\n        var UserService = {\r\n\r\n            getUser:  function( id, details )\r\n            {\r\n                var deferred = $q.defer();\r\n                $http.get( '/api/users/' + id,\r\n                    {\r\n                        params: details\r\n                    })\r\n                    .success( function( response )\r\n                    {\r\n                        deferred.resolve( response );\r\n                    } )\r\n                    .error( function()\r\n                    {\r\n                        deferred.reject();\r\n                    } );\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            onlineUsers:  function( details )\r\n            {\r\n                var deferred = $q.defer();\r\n                $http.get( '/api/online',\r\n                    {\r\n                        params: details\r\n                    })\r\n                    .success( function( response )\r\n                    {\r\n                        deferred.resolve( response );\r\n                    } )\r\n                    .error( function()\r\n                    {\r\n                        deferred.reject();\r\n                    } );\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            Users:  function()\r\n            {\r\n                var deferred = $q.defer();\r\n                $http.get( 'api/users' )\r\n                    .success( function( response )\r\n                    {\r\n                        deferred.resolve( response );\r\n                    } )\r\n                    .error( function()\r\n                    {\r\n                        deferred.reject();\r\n                    } );\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n             invite: function(id)\r\n             {\r\n                 var deferred = $q.defer();\r\n                 $http.get( '/api/users/add/' + id )\r\n                     .success( function( response )\r\n                     {\r\n                         deferred.resolve( response );\r\n                     } )\r\n                     .error( function()\r\n                     {\r\n                         deferred.reject();\r\n                     } );\r\n\r\n                 return deferred.promise;\r\n             },\r\n\r\n            getStatus: function( id )\r\n            {\r\n                var deferred = $q.defer();\r\n                $http.get( '/api/user/status/' + id )\r\n                    .success( function( response )\r\n                    {\r\n                        deferred.resolve( response );\r\n                    } )\r\n                    .error( function()\r\n                    {\r\n                        deferred.reject();\r\n                    } );\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            invitations: function()\r\n            {\r\n                var deferred = $q.defer();\r\n                $http.get( '/api/invitations' )\r\n                    .success( function( response )\r\n                    {\r\n                        deferred.resolve( response );\r\n                    } )\r\n                    .error( function()\r\n                    {\r\n                        deferred.reject();\r\n                    } );\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n            acceptInvitation: function(userId, invitorId)\r\n            {\r\n                var params = {\r\n                    user: userId,\r\n                    invitor: invitorId\r\n                };\r\n                var deferred = $q.defer();\r\n                $http.post( '/api/accept-invite/', params )\r\n                    .success( function( response )\r\n                    {\r\n                        deferred.resolve( response );\r\n                    } )\r\n                    .error( function()\r\n                    {\r\n                        deferred.reject();\r\n                    } );\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n            cancel: function(id)\r\n            {\r\n                var deferred = $q.defer();\r\n                $http.get( '/api/user/cancel-friendship/' + id )\r\n                    .success( function( response )\r\n                    {\r\n                        deferred.resolve( response );\r\n                    } )\r\n                    .error( function()\r\n                    {\r\n                        deferred.reject();\r\n                    } );\r\n\r\n                return deferred.promise;\r\n            },\r\n            search:  function(string)\r\n            {\r\n                var deferred = $q.defer();\r\n                $http.get( '/api/users/search/' + string )\r\n                    .success( function( response )\r\n                    {\r\n                        deferred.resolve( response );\r\n                    } )\r\n                    .error( function()\r\n                    {\r\n                        deferred.reject();\r\n                    } );\r\n\r\n                return deferred.promise;\r\n\r\n            }\r\n        };\r\n        return UserService;\r\n    }] );"],"sourceRoot":"/source/"}