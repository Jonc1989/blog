{"version":3,"sources":["app.js","users/user.js","home/controllers/SearchController.js","home/components/info.js","home/components/search.js","users/services/UserService.js","users/controllers/UserController.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjfile":"all.js","sourcesContent":["/**\r\n * Created by Janis on 06.08.2016..\r\n */\r\nvar app = angular.module( 'app', [\r\n    'ngComponentRouter',\r\n    'users'\r\n\r\n] );\r\n","var user = angular.module('users', [\r\n    \r\n]);\r\n","user.controller( 'SearchController', [ 'UserService', '$scope', function ( UserService, $scope ) {\r\n\r\n    $scope.searchKey = '';\r\n    $scope.searchResults = [];\r\n    \r\n    $scope.search = function()\r\n    {\r\n        if( $scope.searchKey.length > 2)\r\n        {\r\n            UserService.search($scope.searchKey).then( function( response )\r\n            {\r\n                console.log(response);\r\n                $scope.searchResults = response;\r\n            });\r\n        }else if( $scope.searchKey.length < 1 ){\r\n            $scope.searchResults = [];\r\n        }\r\n    };\r\n    \r\n    $scope.showUser = function(id)\r\n    {\r\n        window.location.href = '/user/' + id;\r\n    };\r\n\r\n    $scope.hideSearchResults = function () {\r\n        setTimeout( function () {\r\n            $('#search-results').hide();\r\n        }, 100 );\r\n    }\r\n\r\n    $scope.showSearchResults = function () {\r\n        $('#search-results').show();\r\n    }\r\n}]);","/**\r\n * Created by Janis on 06.08.2016..\r\n */\r\napp.component( 'info', {\r\n    templateUrl: '/api/view/modules.home.api.info',\r\n    controller: 'UserController',\r\n    bindings: {\r\n        id: '<'\r\n    }\r\n})","app.component( 'search', {\r\n    templateUrl: '/api/view/modules.home.api.search',\r\n    controller: 'SearchController'\r\n})","user.service( 'UserService', ['$http', '$q', function( $http, $q )\r\n    {\r\n\r\n        var UserService = {\r\n\r\n                getUser:  function( id, details )\r\n                {\r\n                    var deferred = $q.defer();\r\n                    $http.get( '/api/users/' + id,\r\n                        {\r\n                            params: details\r\n                        })\r\n                        .success( function( response )\r\n                        {\r\n                            deferred.resolve( response );\r\n                        } )\r\n                        .error( function()\r\n                        {\r\n                            deferred.reject();\r\n                        } );\r\n\r\n                    return deferred.promise;\r\n\r\n                },\r\n\r\n            Users:  function()\r\n            {\r\n                var deferred = $q.defer();\r\n                $http.get( 'api/users' )\r\n                    .success( function( response )\r\n                    {\r\n                        deferred.resolve( response );\r\n                    } )\r\n                    .error( function()\r\n                    {\r\n                        deferred.reject();\r\n                    } );\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n             add: function(id)\r\n             {\r\n                 var deferred = $q.defer();\r\n                 $http.get( '/api/user/add/' + id )\r\n                     .success( function( response )\r\n                     {\r\n                         deferred.resolve( response );\r\n                     } )\r\n                     .error( function()\r\n                     {\r\n                         deferred.reject();\r\n                     } );\r\n\r\n                 return deferred.promise;\r\n             },\r\n            invitations: function()\r\n            {\r\n                var deferred = $q.defer();\r\n                $http.get( '/api/invitations' )\r\n                    .success( function( response )\r\n                    {\r\n                        deferred.resolve( response );\r\n                    } )\r\n                    .error( function()\r\n                    {\r\n                        deferred.reject();\r\n                    } );\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n            acceptInvitation: function(userId, invitorId)\r\n            {\r\n                var params = {\r\n                    user: userId,\r\n                    invitor: invitorId\r\n                };\r\n                var deferred = $q.defer();\r\n                $http.post( '/api/accept-invite/', params )\r\n                    .success( function( response )\r\n                    {\r\n                        deferred.resolve( response );\r\n                    } )\r\n                    .error( function()\r\n                    {\r\n                        deferred.reject();\r\n                    } );\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n            cancel: function(id)\r\n            {\r\n                var deferred = $q.defer();\r\n                $http.get( '/api/user/cancel-friendship/' + id )\r\n                    .success( function( response )\r\n                    {\r\n                        deferred.resolve( response );\r\n                    } )\r\n                    .error( function()\r\n                    {\r\n                        deferred.reject();\r\n                    } );\r\n\r\n                return deferred.promise;\r\n            },\r\n            search:  function(string)\r\n            {\r\n                var deferred = $q.defer();\r\n                $http.get( '/api/users/search/' + string )\r\n                    .success( function( response )\r\n                    {\r\n                        deferred.resolve( response );\r\n                    } )\r\n                    .error( function()\r\n                    {\r\n                        deferred.reject();\r\n                    } );\r\n\r\n                return deferred.promise;\r\n\r\n            }\r\n        };\r\n        return UserService;\r\n    }] );","user.controller( 'UserController', [ 'UserService', '$scope', '$location', function ( UserService, $scope, $location ) {\r\n    $scope.user = null;\r\n\r\n\r\n    this.$onInit = function () {\r\n        var details = ['name', 'surname', 'photo'];\r\n        UserService.getUser( this.id, details ).then( function( response )\r\n        {\r\n            $scope.user = response;\r\n        });\r\n    };\r\n    \r\n}]);"],"sourceRoot":"/source/"}